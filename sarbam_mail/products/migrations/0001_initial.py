# Generated by Django 5.1.4 on 2025-01-31 18:16

import django.core.validators
import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('accounts', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category_name', models.CharField(max_length=155)),
            ],
            options={
                'verbose_name': 'Category',
                'verbose_name_plural': 'Categories',
            },
        ),
        migrations.CreateModel(
            name='ComboDeal',
            fields=[
                ('id', models.CharField(editable=False, max_length=20, primary_key=True, serialize=False, unique=True)),
                ('name', models.CharField(max_length=125)),
                ('photo', models.ImageField(blank=True, null=True, upload_to='combo_deals/', validators=[django.core.validators.FileExtensionValidator(['jpeg', 'jpg', 'png'])])),
                ('original_price', models.FloatField(blank=True, default=0, null=True)),
                ('discount_rate', models.FloatField(blank=True, default=0, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('discounted_price', models.FloatField(blank=True, default=0, null=True)),
                ('description', models.TextField(blank=True, default='')),
            ],
        ),
        migrations.CreateModel(
            name='HotDeal',
            fields=[
                ('id', models.CharField(editable=False, max_length=125, primary_key=True, serialize=False, unique=True)),
                ('name', models.CharField(max_length=125)),
                ('photo', models.ImageField(blank=True, null=True, upload_to='hot_deals/', validators=[django.core.validators.FileExtensionValidator(['jpeg', 'jpg', 'png'])])),
                ('original_price', models.FloatField(blank=True, default=0, null=True)),
                ('discount_rate', models.FloatField(blank=True, default=0, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('discounted_price', models.FloatField(blank=True, default=0, null=True)),
                ('description', models.TextField(blank=True, default='')),
                ('weight', models.FloatField(blank=True, default=0, null=True)),
            ],
            options={
                'verbose_name': 'Hot Deal',
                'verbose_name_plural': 'Hot Deals',
            },
        ),
        migrations.CreateModel(
            name='SamplePack',
            fields=[
                ('id', models.CharField(editable=False, max_length=20, primary_key=True, serialize=False, unique=True)),
                ('name', models.CharField(max_length=125)),
                ('photo', models.ImageField(blank=True, null=True, upload_to='combo_deals/', validators=[django.core.validators.FileExtensionValidator(['jpeg', 'jpg', 'png'])])),
                ('original_price', models.FloatField(blank=True, default=0, null=True)),
                ('discount_rate', models.FloatField(blank=True, default=0, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('discounted_price', models.FloatField(blank=True, default=0, null=True)),
                ('description', models.TextField(blank=True, default='')),
                ('weight', models.FloatField(blank=True, default=0, null=True)),
            ],
            options={
                'verbose_name': 'Sample Pack',
                'verbose_name_plural': 'Sample Packs',
            },
        ),
        migrations.CreateModel(
            name='Cart',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('cart_id', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('total_amount', models.FloatField(default=0, validators=[django.core.validators.MinValueValidator(0)])),
                ('address', models.CharField(blank=True, max_length=255, null=True)),
                ('checked_out', models.BooleanField(default=False)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='cart', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='CartCombo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('qty', models.IntegerField(validators=[django.core.validators.MinValueValidator(0)])),
                ('subtotal', models.FloatField(default=0, validators=[django.core.validators.MinValueValidator(0)])),
                ('status', models.CharField(choices=[('Pending', 'PENDING'), ('Placed', 'PLACED'), ('Cancelled', 'CANCELLED')], default='Pending', max_length=25)),
                ('cart', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='cart_combo_items', to='products.cart')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='cart_combo', to='products.combodeal')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('order_id', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('total_amount', models.FloatField(validators=[django.core.validators.MinValueValidator(0)])),
                ('status', models.CharField(choices=[('Placed', 'PLACED'), ('Shipped', 'SHIPPED'), ('Out for Delivery', 'OUT FOR DELIVERY'), ('Delivered', 'DELIVERED'), ('Cancelled', 'CANCELLED')], default='PENDING', max_length=30)),
                ('address', models.CharField(blank=True, max_length=255, null=True)),
                ('is_coupon_applied', models.BooleanField(default=False)),
                ('coupon_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='promo_coupon', to='accounts.promocode')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='orders', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=255)),
                ('photo', models.ImageField(blank=True, null=True, upload_to='products/', validators=[django.core.validators.FileExtensionValidator(allowed_extensions=('png', 'jpg', 'jpeg'))])),
                ('description', models.TextField(blank=True, null=True)),
                ('price', models.FloatField(validators=[django.core.validators.MinValueValidator(0)])),
                ('qty', models.IntegerField(validators=[django.core.validators.MinValueValidator(0)])),
                ('weight', models.FloatField(validators=[django.core.validators.MinValueValidator(0)])),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='products', to='products.category')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='OrderItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('qty', models.IntegerField(validators=[django.core.validators.MinValueValidator(1)])),
                ('price', models.FloatField(validators=[django.core.validators.MinValueValidator(0)])),
                ('status', models.CharField(choices=[('Placed', 'PLACED'), ('Confirmed', 'CONFIRMED'), ('Cancelled', 'CANCELLED')], default='PLACED', max_length=30)),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='order_items', to='products.order')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='products.product')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='CartProduct',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('qty', models.IntegerField(validators=[django.core.validators.MinValueValidator(0)])),
                ('subtotal', models.FloatField(default=0, validators=[django.core.validators.MinValueValidator(0)])),
                ('status', models.CharField(choices=[('Pending', 'PENDING'), ('Placed', 'PLACED'), ('Cancelled', 'CANCELLED')], default='Pending', max_length=25)),
                ('cart', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='cart_items', to='products.cart')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='cart_products', to='products.product')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
